{"ast":null,"code":"import SignaturePad from \"signature_pad\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nfunction StudentComponent_b_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"b\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Student: \", ctx_r0.student[\"FIRSTNAME\"], \"\");\n  }\n}\nexport class StudentComponent {\n  constructor(route) {\n    this.route = route;\n    this.studentId = '';\n    this.student = {};\n  }\n  ngOnInit() {\n    const canvas = document.querySelector(\"canvas\");\n    this.signaturePad = new SignaturePad(canvas, {\n      backgroundColor: 'rgb(0,0,0)',\n      penColor: 'rgb(255, 255, 255)'\n    });\n    this.route.paramMap.subscribe(params => {\n      this.studentId = params.get('id') ?? '';\n      fetch(`http://localhost:3001/students/${this.studentId}`).then(response => response.json()).then(data => {\n        this.student = data;\n        if (this.student.signature) {\n          const img = new Image();\n          img.src = this.student.signature;\n          img.onload = () => {\n            this.signaturePad?.clear();\n            this.signaturePad?.fromDataURL(this.student.signature);\n          };\n        }\n      });\n    });\n  }\n  sign() {\n    const base64 = this.signaturePad?.toDataURL();\n    fetch(`http://localhost:3001/students/${this.studentId}/sign`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        signature: base64\n      })\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n    });\n  }\n  static #_ = this.ɵfac = function StudentComponent_Factory(t) {\n    return new (t || StudentComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: StudentComponent,\n    selectors: [[\"app-student\"]],\n    decls: 7,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [\"width\", \"100px\", \"height\", \"100px\"], [3, \"click\"]],\n    template: function StudentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n        i0.ɵɵtext(2, \"student works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, StudentComponent_b_3_Template, 2, 1, \"b\", 0);\n        i0.ɵɵelement(4, \"canvas\", 1);\n        i0.ɵɵelementStart(5, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function StudentComponent_Template_button_click_5_listener() {\n          return ctx.sign();\n        });\n        i0.ɵɵtext(6, \"Sign\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.student);\n      }\n    },\n    dependencies: [i2.NgIf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["SignaturePad","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","student","StudentComponent","constructor","route","studentId","ngOnInit","canvas","document","querySelector","signaturePad","backgroundColor","penColor","paramMap","subscribe","params","get","fetch","then","response","json","data","signature","img","Image","src","onload","clear","fromDataURL","sign","base64","toDataURL","method","headers","body","JSON","stringify","console","log","_","ɵɵdirectiveInject","i1","ActivatedRoute","_2","selectors","decls","vars","consts","template","StudentComponent_Template","rf","ctx","ɵɵtemplate","StudentComponent_b_3_Template","ɵɵelement","ɵɵlistener","StudentComponent_Template_button_click_5_listener","ɵɵproperty"],"sources":["/Users/axelvion/Desktop/Edusign-test-technique/front/src/app/student/student.component.ts","/Users/axelvion/Desktop/Edusign-test-technique/front/src/app/student/student.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport SignaturePad from \"signature_pad\";\n\n@Component({\n  selector: 'app-student',\n  templateUrl: './student.component.html',\n  styleUrls: ['./student.component.scss']\n})\nexport class StudentComponent implements OnInit{\n  studentId= '';\n  student: any = {};\n  signaturePad: SignaturePad | undefined;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit() {\n      const canvas = document.querySelector(\"canvas\");\n      this.signaturePad = new SignaturePad(canvas as HTMLCanvasElement, {\n          backgroundColor: 'rgb(0,0,0)',\n          penColor: 'rgb(255, 255, 255)'\n      });\n\n    this.route.paramMap.subscribe(params => {\n      this.studentId = params.get('id') ?? '';\n\n        fetch(`http://localhost:3001/students/${this.studentId}`)\n        .then(response => response.json())\n        .then(data => {\n            this.student = data;\n\n            if (this.student.signature) {\n                const img = new Image();\n                img.src = this.student.signature;\n                img.onload = () => {\n                    this.signaturePad?.clear();\n                    this.signaturePad?.fromDataURL(this.student.signature);\n                };\n            }\n        });\n    });\n  }\n\n  sign() {\n    const base64 = this.signaturePad?.toDataURL();\n\n    fetch(`http://localhost:3001/students/${this.studentId}/sign`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ signature: base64 })\n    })\n    .then(response => response.json())\n    .then(data => {\n        console.log(data);\n    });\n  }\n}\n","<div>\n    <p>student works!</p>\n    <b *ngIf=\"student\">Student: {{ student[\"FIRSTNAME\"] }}</b>\n\n    <canvas width=\"100px\" height=\"100px\"></canvas>\n    <button (click)=\"sign()\">Sign</button>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}