{"ast":null,"code":"/*!\n * Signature Pad v4.2.0 | https://github.com/szimek/signature_pad\n * (c) 2024 Szymon Nowak | Released under the MIT license\n */\n\nclass Point {\n  constructor(x, y, pressure, time) {\n    if (isNaN(x) || isNaN(y)) {\n      throw new Error(`Point is invalid: (${x}, ${y})`);\n    }\n    this.x = +x;\n    this.y = +y;\n    this.pressure = pressure || 0;\n    this.time = time || Date.now();\n  }\n  distanceTo(start) {\n    return Math.sqrt(Math.pow(this.x - start.x, 2) + Math.pow(this.y - start.y, 2));\n  }\n  equals(other) {\n    return this.x === other.x && this.y === other.y && this.pressure === other.pressure && this.time === other.time;\n  }\n  velocityFrom(start) {\n    return this.time !== start.time ? this.distanceTo(start) / (this.time - start.time) : 0;\n  }\n}\nclass Bezier {\n  static fromPoints(points, widths) {\n    const c2 = this.calculateControlPoints(points[0], points[1], points[2]).c2;\n    const c3 = this.calculateControlPoints(points[1], points[2], points[3]).c1;\n    return new Bezier(points[1], c2, c3, points[2], widths.start, widths.end);\n  }\n  static calculateControlPoints(s1, s2, s3) {\n    const dx1 = s1.x - s2.x;\n    const dy1 = s1.y - s2.y;\n    const dx2 = s2.x - s3.x;\n    const dy2 = s2.y - s3.y;\n    const m1 = {\n      x: (s1.x + s2.x) / 2.0,\n      y: (s1.y + s2.y) / 2.0\n    };\n    const m2 = {\n      x: (s2.x + s3.x) / 2.0,\n      y: (s2.y + s3.y) / 2.0\n    };\n    const l1 = Math.sqrt(dx1 * dx1 + dy1 * dy1);\n    const l2 = Math.sqrt(dx2 * dx2 + dy2 * dy2);\n    const dxm = m1.x - m2.x;\n    const dym = m1.y - m2.y;\n    const k = l2 / (l1 + l2);\n    const cm = {\n      x: m2.x + dxm * k,\n      y: m2.y + dym * k\n    };\n    const tx = s2.x - cm.x;\n    const ty = s2.y - cm.y;\n    return {\n      c1: new Point(m1.x + tx, m1.y + ty),\n      c2: new Point(m2.x + tx, m2.y + ty)\n    };\n  }\n  constructor(startPoint, control2, control1, endPoint, startWidth, endWidth) {\n    this.startPoint = startPoint;\n    this.control2 = control2;\n    this.control1 = control1;\n    this.endPoint = endPoint;\n    this.startWidth = startWidth;\n    this.endWidth = endWidth;\n  }\n  length() {\n    const steps = 10;\n    let length = 0;\n    let px;\n    let py;\n    for (let i = 0; i <= steps; i += 1) {\n      const t = i / steps;\n      const cx = this.point(t, this.startPoint.x, this.control1.x, this.control2.x, this.endPoint.x);\n      const cy = this.point(t, this.startPoint.y, this.control1.y, this.control2.y, this.endPoint.y);\n      if (i > 0) {\n        const xdiff = cx - px;\n        const ydiff = cy - py;\n        length += Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n      }\n      px = cx;\n      py = cy;\n    }\n    return length;\n  }\n  point(t, start, c1, c2, end) {\n    return start * (1.0 - t) * (1.0 - t) * (1.0 - t) + 3.0 * c1 * (1.0 - t) * (1.0 - t) * t + 3.0 * c2 * (1.0 - t) * t * t + end * t * t * t;\n  }\n}\nclass SignatureEventTarget {\n  constructor() {\n    try {\n      this._et = new EventTarget();\n    } catch (error) {\n      this._et = document;\n    }\n  }\n  addEventListener(type, listener, options) {\n    this._et.addEventListener(type, listener, options);\n  }\n  dispatchEvent(event) {\n    return this._et.dispatchEvent(event);\n  }\n  removeEventListener(type, callback, options) {\n    this._et.removeEventListener(type, callback, options);\n  }\n}\nfunction throttle(fn, wait = 250) {\n  let previous = 0;\n  let timeout = null;\n  let result;\n  let storedContext;\n  let storedArgs;\n  const later = () => {\n    previous = Date.now();\n    timeout = null;\n    result = fn.apply(storedContext, storedArgs);\n    if (!timeout) {\n      storedContext = null;\n      storedArgs = [];\n    }\n  };\n  return function wrapper(...args) {\n    const now = Date.now();\n    const remaining = wait - (now - previous);\n    storedContext = this;\n    storedArgs = args;\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      previous = now;\n      result = fn.apply(storedContext, storedArgs);\n      if (!timeout) {\n        storedContext = null;\n        storedArgs = [];\n      }\n    } else if (!timeout) {\n      timeout = window.setTimeout(later, remaining);\n    }\n    return result;\n  };\n}\nclass SignaturePad extends SignatureEventTarget {\n  constructor(canvas, options = {}) {\n    super();\n    this.canvas = canvas;\n    this._drawingStroke = false;\n    this._isEmpty = true;\n    this._lastPoints = [];\n    this._data = [];\n    this._lastVelocity = 0;\n    this._lastWidth = 0;\n    this._handleMouseDown = event => {\n      if (event.buttons === 1) {\n        this._strokeBegin(event);\n      }\n    };\n    this._handleMouseMove = event => {\n      this._strokeMoveUpdate(event);\n    };\n    this._handleMouseUp = event => {\n      if (event.buttons === 1) {\n        this._strokeEnd(event);\n      }\n    };\n    this._handleTouchStart = event => {\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n      if (event.targetTouches.length === 1) {\n        const touch = event.changedTouches[0];\n        this._strokeBegin(touch);\n      }\n    };\n    this._handleTouchMove = event => {\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n      const touch = event.targetTouches[0];\n      this._strokeMoveUpdate(touch);\n    };\n    this._handleTouchEnd = event => {\n      const wasCanvasTouched = event.target === this.canvas;\n      if (wasCanvasTouched) {\n        if (event.cancelable) {\n          event.preventDefault();\n        }\n        const touch = event.changedTouches[0];\n        this._strokeEnd(touch);\n      }\n    };\n    this._handlePointerStart = event => {\n      event.preventDefault();\n      this._strokeBegin(event);\n    };\n    this._handlePointerMove = event => {\n      this._strokeMoveUpdate(event);\n    };\n    this._handlePointerEnd = event => {\n      if (this._drawingStroke) {\n        event.preventDefault();\n        this._strokeEnd(event);\n      }\n    };\n    this.velocityFilterWeight = options.velocityFilterWeight || 0.7;\n    this.minWidth = options.minWidth || 0.5;\n    this.maxWidth = options.maxWidth || 2.5;\n    this.throttle = 'throttle' in options ? options.throttle : 16;\n    this.minDistance = 'minDistance' in options ? options.minDistance : 5;\n    this.dotSize = options.dotSize || 0;\n    this.penColor = options.penColor || 'black';\n    this.backgroundColor = options.backgroundColor || 'rgba(0,0,0,0)';\n    this.compositeOperation = options.compositeOperation || 'source-over';\n    this.canvasContextOptions = 'canvasContextOptions' in options ? options.canvasContextOptions : {};\n    this._strokeMoveUpdate = this.throttle ? throttle(SignaturePad.prototype._strokeUpdate, this.throttle) : SignaturePad.prototype._strokeUpdate;\n    this._ctx = canvas.getContext('2d', this.canvasContextOptions);\n    this.clear();\n    this.on();\n  }\n  clear() {\n    const {\n      _ctx: ctx,\n      canvas\n    } = this;\n    ctx.fillStyle = this.backgroundColor;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    this._data = [];\n    this._reset(this._getPointGroupOptions());\n    this._isEmpty = true;\n  }\n  fromDataURL(dataUrl, options = {}) {\n    return new Promise((resolve, reject) => {\n      const image = new Image();\n      const ratio = options.ratio || window.devicePixelRatio || 1;\n      const width = options.width || this.canvas.width / ratio;\n      const height = options.height || this.canvas.height / ratio;\n      const xOffset = options.xOffset || 0;\n      const yOffset = options.yOffset || 0;\n      this._reset(this._getPointGroupOptions());\n      image.onload = () => {\n        this._ctx.drawImage(image, xOffset, yOffset, width, height);\n        resolve();\n      };\n      image.onerror = error => {\n        reject(error);\n      };\n      image.crossOrigin = 'anonymous';\n      image.src = dataUrl;\n      this._isEmpty = false;\n    });\n  }\n  toDataURL(type = 'image/png', encoderOptions) {\n    switch (type) {\n      case 'image/svg+xml':\n        if (typeof encoderOptions !== 'object') {\n          encoderOptions = undefined;\n        }\n        return `data:image/svg+xml;base64,${btoa(this.toSVG(encoderOptions))}`;\n      default:\n        if (typeof encoderOptions !== 'number') {\n          encoderOptions = undefined;\n        }\n        return this.canvas.toDataURL(type, encoderOptions);\n    }\n  }\n  on() {\n    this.canvas.style.touchAction = 'none';\n    this.canvas.style.msTouchAction = 'none';\n    this.canvas.style.userSelect = 'none';\n    const isIOS = /Macintosh/.test(navigator.userAgent) && 'ontouchstart' in document;\n    if (window.PointerEvent && !isIOS) {\n      this._handlePointerEvents();\n    } else {\n      this._handleMouseEvents();\n      if ('ontouchstart' in window) {\n        this._handleTouchEvents();\n      }\n    }\n  }\n  off() {\n    this.canvas.style.touchAction = 'auto';\n    this.canvas.style.msTouchAction = 'auto';\n    this.canvas.style.userSelect = 'auto';\n    this.canvas.removeEventListener('pointerdown', this._handlePointerStart);\n    this.canvas.removeEventListener('pointermove', this._handlePointerMove);\n    this.canvas.ownerDocument.removeEventListener('pointerup', this._handlePointerEnd);\n    this.canvas.removeEventListener('mousedown', this._handleMouseDown);\n    this.canvas.removeEventListener('mousemove', this._handleMouseMove);\n    this.canvas.ownerDocument.removeEventListener('mouseup', this._handleMouseUp);\n    this.canvas.removeEventListener('touchstart', this._handleTouchStart);\n    this.canvas.removeEventListener('touchmove', this._handleTouchMove);\n    this.canvas.removeEventListener('touchend', this._handleTouchEnd);\n  }\n  isEmpty() {\n    return this._isEmpty;\n  }\n  fromData(pointGroups, {\n    clear = true\n  } = {}) {\n    if (clear) {\n      this.clear();\n    }\n    this._fromData(pointGroups, this._drawCurve.bind(this), this._drawDot.bind(this));\n    this._data = this._data.concat(pointGroups);\n  }\n  toData() {\n    return this._data;\n  }\n  _getPointGroupOptions(group) {\n    return {\n      penColor: group && 'penColor' in group ? group.penColor : this.penColor,\n      dotSize: group && 'dotSize' in group ? group.dotSize : this.dotSize,\n      minWidth: group && 'minWidth' in group ? group.minWidth : this.minWidth,\n      maxWidth: group && 'maxWidth' in group ? group.maxWidth : this.maxWidth,\n      velocityFilterWeight: group && 'velocityFilterWeight' in group ? group.velocityFilterWeight : this.velocityFilterWeight,\n      compositeOperation: group && 'compositeOperation' in group ? group.compositeOperation : this.compositeOperation\n    };\n  }\n  _strokeBegin(event) {\n    const cancelled = !this.dispatchEvent(new CustomEvent('beginStroke', {\n      detail: event,\n      cancelable: true\n    }));\n    if (cancelled) {\n      return;\n    }\n    this._drawingStroke = true;\n    const pointGroupOptions = this._getPointGroupOptions();\n    const newPointGroup = Object.assign(Object.assign({}, pointGroupOptions), {\n      points: []\n    });\n    this._data.push(newPointGroup);\n    this._reset(pointGroupOptions);\n    this._strokeUpdate(event);\n  }\n  _strokeUpdate(event) {\n    if (!this._drawingStroke) {\n      return;\n    }\n    if (this._data.length === 0) {\n      this._strokeBegin(event);\n      return;\n    }\n    this.dispatchEvent(new CustomEvent('beforeUpdateStroke', {\n      detail: event\n    }));\n    const x = event.clientX;\n    const y = event.clientY;\n    const pressure = event.pressure !== undefined ? event.pressure : event.force !== undefined ? event.force : 0;\n    const point = this._createPoint(x, y, pressure);\n    const lastPointGroup = this._data[this._data.length - 1];\n    const lastPoints = lastPointGroup.points;\n    const lastPoint = lastPoints.length > 0 && lastPoints[lastPoints.length - 1];\n    const isLastPointTooClose = lastPoint ? point.distanceTo(lastPoint) <= this.minDistance : false;\n    const pointGroupOptions = this._getPointGroupOptions(lastPointGroup);\n    if (!lastPoint || !(lastPoint && isLastPointTooClose)) {\n      const curve = this._addPoint(point, pointGroupOptions);\n      if (!lastPoint) {\n        this._drawDot(point, pointGroupOptions);\n      } else if (curve) {\n        this._drawCurve(curve, pointGroupOptions);\n      }\n      lastPoints.push({\n        time: point.time,\n        x: point.x,\n        y: point.y,\n        pressure: point.pressure\n      });\n    }\n    this.dispatchEvent(new CustomEvent('afterUpdateStroke', {\n      detail: event\n    }));\n  }\n  _strokeEnd(event) {\n    if (!this._drawingStroke) {\n      return;\n    }\n    this._strokeUpdate(event);\n    this._drawingStroke = false;\n    this.dispatchEvent(new CustomEvent('endStroke', {\n      detail: event\n    }));\n  }\n  _handlePointerEvents() {\n    this._drawingStroke = false;\n    this.canvas.addEventListener('pointerdown', this._handlePointerStart);\n    this.canvas.addEventListener('pointermove', this._handlePointerMove);\n    this.canvas.ownerDocument.addEventListener('pointerup', this._handlePointerEnd);\n  }\n  _handleMouseEvents() {\n    this._drawingStroke = false;\n    this.canvas.addEventListener('mousedown', this._handleMouseDown);\n    this.canvas.addEventListener('mousemove', this._handleMouseMove);\n    this.canvas.ownerDocument.addEventListener('mouseup', this._handleMouseUp);\n  }\n  _handleTouchEvents() {\n    this.canvas.addEventListener('touchstart', this._handleTouchStart);\n    this.canvas.addEventListener('touchmove', this._handleTouchMove);\n    this.canvas.addEventListener('touchend', this._handleTouchEnd);\n  }\n  _reset(options) {\n    this._lastPoints = [];\n    this._lastVelocity = 0;\n    this._lastWidth = (options.minWidth + options.maxWidth) / 2;\n    this._ctx.fillStyle = options.penColor;\n    this._ctx.globalCompositeOperation = options.compositeOperation;\n  }\n  _createPoint(x, y, pressure) {\n    const rect = this.canvas.getBoundingClientRect();\n    return new Point(x - rect.left, y - rect.top, pressure, new Date().getTime());\n  }\n  _addPoint(point, options) {\n    const {\n      _lastPoints\n    } = this;\n    _lastPoints.push(point);\n    if (_lastPoints.length > 2) {\n      if (_lastPoints.length === 3) {\n        _lastPoints.unshift(_lastPoints[0]);\n      }\n      const widths = this._calculateCurveWidths(_lastPoints[1], _lastPoints[2], options);\n      const curve = Bezier.fromPoints(_lastPoints, widths);\n      _lastPoints.shift();\n      return curve;\n    }\n    return null;\n  }\n  _calculateCurveWidths(startPoint, endPoint, options) {\n    const velocity = options.velocityFilterWeight * endPoint.velocityFrom(startPoint) + (1 - options.velocityFilterWeight) * this._lastVelocity;\n    const newWidth = this._strokeWidth(velocity, options);\n    const widths = {\n      end: newWidth,\n      start: this._lastWidth\n    };\n    this._lastVelocity = velocity;\n    this._lastWidth = newWidth;\n    return widths;\n  }\n  _strokeWidth(velocity, options) {\n    return Math.max(options.maxWidth / (velocity + 1), options.minWidth);\n  }\n  _drawCurveSegment(x, y, width) {\n    const ctx = this._ctx;\n    ctx.moveTo(x, y);\n    ctx.arc(x, y, width, 0, 2 * Math.PI, false);\n    this._isEmpty = false;\n  }\n  _drawCurve(curve, options) {\n    const ctx = this._ctx;\n    const widthDelta = curve.endWidth - curve.startWidth;\n    const drawSteps = Math.ceil(curve.length()) * 2;\n    ctx.beginPath();\n    ctx.fillStyle = options.penColor;\n    for (let i = 0; i < drawSteps; i += 1) {\n      const t = i / drawSteps;\n      const tt = t * t;\n      const ttt = tt * t;\n      const u = 1 - t;\n      const uu = u * u;\n      const uuu = uu * u;\n      let x = uuu * curve.startPoint.x;\n      x += 3 * uu * t * curve.control1.x;\n      x += 3 * u * tt * curve.control2.x;\n      x += ttt * curve.endPoint.x;\n      let y = uuu * curve.startPoint.y;\n      y += 3 * uu * t * curve.control1.y;\n      y += 3 * u * tt * curve.control2.y;\n      y += ttt * curve.endPoint.y;\n      const width = Math.min(curve.startWidth + ttt * widthDelta, options.maxWidth);\n      this._drawCurveSegment(x, y, width);\n    }\n    ctx.closePath();\n    ctx.fill();\n  }\n  _drawDot(point, options) {\n    const ctx = this._ctx;\n    const width = options.dotSize > 0 ? options.dotSize : (options.minWidth + options.maxWidth) / 2;\n    ctx.beginPath();\n    this._drawCurveSegment(point.x, point.y, width);\n    ctx.closePath();\n    ctx.fillStyle = options.penColor;\n    ctx.fill();\n  }\n  _fromData(pointGroups, drawCurve, drawDot) {\n    for (const group of pointGroups) {\n      const {\n        points\n      } = group;\n      const pointGroupOptions = this._getPointGroupOptions(group);\n      if (points.length > 1) {\n        for (let j = 0; j < points.length; j += 1) {\n          const basicPoint = points[j];\n          const point = new Point(basicPoint.x, basicPoint.y, basicPoint.pressure, basicPoint.time);\n          if (j === 0) {\n            this._reset(pointGroupOptions);\n          }\n          const curve = this._addPoint(point, pointGroupOptions);\n          if (curve) {\n            drawCurve(curve, pointGroupOptions);\n          }\n        }\n      } else {\n        this._reset(pointGroupOptions);\n        drawDot(points[0], pointGroupOptions);\n      }\n    }\n  }\n  toSVG({\n    includeBackgroundColor = false\n  } = {}) {\n    const pointGroups = this._data;\n    const ratio = Math.max(window.devicePixelRatio || 1, 1);\n    const minX = 0;\n    const minY = 0;\n    const maxX = this.canvas.width / ratio;\n    const maxY = this.canvas.height / ratio;\n    const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n    svg.setAttribute('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n    svg.setAttribute('viewBox', `${minX} ${minY} ${maxX} ${maxY}`);\n    svg.setAttribute('width', maxX.toString());\n    svg.setAttribute('height', maxY.toString());\n    if (includeBackgroundColor && this.backgroundColor) {\n      const rect = document.createElement('rect');\n      rect.setAttribute('width', '100%');\n      rect.setAttribute('height', '100%');\n      rect.setAttribute('fill', this.backgroundColor);\n      svg.appendChild(rect);\n    }\n    this._fromData(pointGroups, (curve, {\n      penColor\n    }) => {\n      const path = document.createElement('path');\n      if (!isNaN(curve.control1.x) && !isNaN(curve.control1.y) && !isNaN(curve.control2.x) && !isNaN(curve.control2.y)) {\n        const attr = `M ${curve.startPoint.x.toFixed(3)},${curve.startPoint.y.toFixed(3)} ` + `C ${curve.control1.x.toFixed(3)},${curve.control1.y.toFixed(3)} ` + `${curve.control2.x.toFixed(3)},${curve.control2.y.toFixed(3)} ` + `${curve.endPoint.x.toFixed(3)},${curve.endPoint.y.toFixed(3)}`;\n        path.setAttribute('d', attr);\n        path.setAttribute('stroke-width', (curve.endWidth * 2.25).toFixed(3));\n        path.setAttribute('stroke', penColor);\n        path.setAttribute('fill', 'none');\n        path.setAttribute('stroke-linecap', 'round');\n        svg.appendChild(path);\n      }\n    }, (point, {\n      penColor,\n      dotSize,\n      minWidth,\n      maxWidth\n    }) => {\n      const circle = document.createElement('circle');\n      const size = dotSize > 0 ? dotSize : (minWidth + maxWidth) / 2;\n      circle.setAttribute('r', size.toString());\n      circle.setAttribute('cx', point.x.toString());\n      circle.setAttribute('cy', point.y.toString());\n      circle.setAttribute('fill', penColor);\n      svg.appendChild(circle);\n    });\n    return svg.outerHTML;\n  }\n}\nexport { SignaturePad as default };","map":{"version":3,"names":["Point","constructor","x","y","pressure","time","isNaN","Error","Date","now","distanceTo","start","Math","sqrt","pow","equals","other","velocityFrom","Bezier","fromPoints","points","widths","c2","calculateControlPoints","c3","c1","end","s1","s2","s3","dx1","dy1","dx2","dy2","m1","m2","l1","l2","dxm","dym","k","cm","tx","ty","startPoint","control2","control1","endPoint","startWidth","endWidth","length","steps","px","py","i","t","cx","point","cy","xdiff","ydiff","SignatureEventTarget","_et","EventTarget","error","document","addEventListener","type","listener","options","dispatchEvent","event","removeEventListener","callback","throttle","fn","wait","previous","timeout","result","storedContext","storedArgs","later","apply","wrapper","args","remaining","clearTimeout","window","setTimeout","SignaturePad","canvas","_drawingStroke","_isEmpty","_lastPoints","_data","_lastVelocity","_lastWidth","_handleMouseDown","buttons","_strokeBegin","_handleMouseMove","_strokeMoveUpdate","_handleMouseUp","_strokeEnd","_handleTouchStart","cancelable","preventDefault","targetTouches","touch","changedTouches","_handleTouchMove","_handleTouchEnd","wasCanvasTouched","target","_handlePointerStart","_handlePointerMove","_handlePointerEnd","velocityFilterWeight","minWidth","maxWidth","minDistance","dotSize","penColor","backgroundColor","compositeOperation","canvasContextOptions","prototype","_strokeUpdate","_ctx","getContext","clear","on","ctx","fillStyle","clearRect","width","height","fillRect","_reset","_getPointGroupOptions","fromDataURL","dataUrl","Promise","resolve","reject","image","Image","ratio","devicePixelRatio","xOffset","yOffset","onload","drawImage","onerror","crossOrigin","src","toDataURL","encoderOptions","undefined","btoa","toSVG","style","touchAction","msTouchAction","userSelect","isIOS","test","navigator","userAgent","PointerEvent","_handlePointerEvents","_handleMouseEvents","_handleTouchEvents","off","ownerDocument","isEmpty","fromData","pointGroups","_fromData","_drawCurve","bind","_drawDot","concat","toData","group","cancelled","CustomEvent","detail","pointGroupOptions","newPointGroup","Object","assign","push","clientX","clientY","force","_createPoint","lastPointGroup","lastPoints","lastPoint","isLastPointTooClose","curve","_addPoint","globalCompositeOperation","rect","getBoundingClientRect","left","top","getTime","unshift","_calculateCurveWidths","shift","velocity","newWidth","_strokeWidth","max","_drawCurveSegment","moveTo","arc","PI","widthDelta","drawSteps","ceil","beginPath","tt","ttt","u","uu","uuu","min","closePath","fill","drawCurve","drawDot","j","basicPoint","includeBackgroundColor","minX","minY","maxX","maxY","svg","createElementNS","setAttribute","toString","createElement","appendChild","path","attr","toFixed","circle","size","outerHTML","default"],"sources":["/Users/axelvion/Desktop/Edusign-test-technique/front/node_modules/signature_pad/dist/signature_pad.js"],"sourcesContent":["/*!\n * Signature Pad v4.2.0 | https://github.com/szimek/signature_pad\n * (c) 2024 Szymon Nowak | Released under the MIT license\n */\n\nclass Point {\n    constructor(x, y, pressure, time) {\n        if (isNaN(x) || isNaN(y)) {\n            throw new Error(`Point is invalid: (${x}, ${y})`);\n        }\n        this.x = +x;\n        this.y = +y;\n        this.pressure = pressure || 0;\n        this.time = time || Date.now();\n    }\n    distanceTo(start) {\n        return Math.sqrt(Math.pow(this.x - start.x, 2) + Math.pow(this.y - start.y, 2));\n    }\n    equals(other) {\n        return (this.x === other.x &&\n            this.y === other.y &&\n            this.pressure === other.pressure &&\n            this.time === other.time);\n    }\n    velocityFrom(start) {\n        return this.time !== start.time\n            ? this.distanceTo(start) / (this.time - start.time)\n            : 0;\n    }\n}\n\nclass Bezier {\n    static fromPoints(points, widths) {\n        const c2 = this.calculateControlPoints(points[0], points[1], points[2]).c2;\n        const c3 = this.calculateControlPoints(points[1], points[2], points[3]).c1;\n        return new Bezier(points[1], c2, c3, points[2], widths.start, widths.end);\n    }\n    static calculateControlPoints(s1, s2, s3) {\n        const dx1 = s1.x - s2.x;\n        const dy1 = s1.y - s2.y;\n        const dx2 = s2.x - s3.x;\n        const dy2 = s2.y - s3.y;\n        const m1 = { x: (s1.x + s2.x) / 2.0, y: (s1.y + s2.y) / 2.0 };\n        const m2 = { x: (s2.x + s3.x) / 2.0, y: (s2.y + s3.y) / 2.0 };\n        const l1 = Math.sqrt(dx1 * dx1 + dy1 * dy1);\n        const l2 = Math.sqrt(dx2 * dx2 + dy2 * dy2);\n        const dxm = m1.x - m2.x;\n        const dym = m1.y - m2.y;\n        const k = l2 / (l1 + l2);\n        const cm = { x: m2.x + dxm * k, y: m2.y + dym * k };\n        const tx = s2.x - cm.x;\n        const ty = s2.y - cm.y;\n        return {\n            c1: new Point(m1.x + tx, m1.y + ty),\n            c2: new Point(m2.x + tx, m2.y + ty),\n        };\n    }\n    constructor(startPoint, control2, control1, endPoint, startWidth, endWidth) {\n        this.startPoint = startPoint;\n        this.control2 = control2;\n        this.control1 = control1;\n        this.endPoint = endPoint;\n        this.startWidth = startWidth;\n        this.endWidth = endWidth;\n    }\n    length() {\n        const steps = 10;\n        let length = 0;\n        let px;\n        let py;\n        for (let i = 0; i <= steps; i += 1) {\n            const t = i / steps;\n            const cx = this.point(t, this.startPoint.x, this.control1.x, this.control2.x, this.endPoint.x);\n            const cy = this.point(t, this.startPoint.y, this.control1.y, this.control2.y, this.endPoint.y);\n            if (i > 0) {\n                const xdiff = cx - px;\n                const ydiff = cy - py;\n                length += Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n            }\n            px = cx;\n            py = cy;\n        }\n        return length;\n    }\n    point(t, start, c1, c2, end) {\n        return (start * (1.0 - t) * (1.0 - t) * (1.0 - t))\n            + (3.0 * c1 * (1.0 - t) * (1.0 - t) * t)\n            + (3.0 * c2 * (1.0 - t) * t * t)\n            + (end * t * t * t);\n    }\n}\n\nclass SignatureEventTarget {\n    constructor() {\n        try {\n            this._et = new EventTarget();\n        }\n        catch (error) {\n            this._et = document;\n        }\n    }\n    addEventListener(type, listener, options) {\n        this._et.addEventListener(type, listener, options);\n    }\n    dispatchEvent(event) {\n        return this._et.dispatchEvent(event);\n    }\n    removeEventListener(type, callback, options) {\n        this._et.removeEventListener(type, callback, options);\n    }\n}\n\nfunction throttle(fn, wait = 250) {\n    let previous = 0;\n    let timeout = null;\n    let result;\n    let storedContext;\n    let storedArgs;\n    const later = () => {\n        previous = Date.now();\n        timeout = null;\n        result = fn.apply(storedContext, storedArgs);\n        if (!timeout) {\n            storedContext = null;\n            storedArgs = [];\n        }\n    };\n    return function wrapper(...args) {\n        const now = Date.now();\n        const remaining = wait - (now - previous);\n        storedContext = this;\n        storedArgs = args;\n        if (remaining <= 0 || remaining > wait) {\n            if (timeout) {\n                clearTimeout(timeout);\n                timeout = null;\n            }\n            previous = now;\n            result = fn.apply(storedContext, storedArgs);\n            if (!timeout) {\n                storedContext = null;\n                storedArgs = [];\n            }\n        }\n        else if (!timeout) {\n            timeout = window.setTimeout(later, remaining);\n        }\n        return result;\n    };\n}\n\nclass SignaturePad extends SignatureEventTarget {\n    constructor(canvas, options = {}) {\n        super();\n        this.canvas = canvas;\n        this._drawingStroke = false;\n        this._isEmpty = true;\n        this._lastPoints = [];\n        this._data = [];\n        this._lastVelocity = 0;\n        this._lastWidth = 0;\n        this._handleMouseDown = (event) => {\n            if (event.buttons === 1) {\n                this._strokeBegin(event);\n            }\n        };\n        this._handleMouseMove = (event) => {\n            this._strokeMoveUpdate(event);\n        };\n        this._handleMouseUp = (event) => {\n            if (event.buttons === 1) {\n                this._strokeEnd(event);\n            }\n        };\n        this._handleTouchStart = (event) => {\n            if (event.cancelable) {\n                event.preventDefault();\n            }\n            if (event.targetTouches.length === 1) {\n                const touch = event.changedTouches[0];\n                this._strokeBegin(touch);\n            }\n        };\n        this._handleTouchMove = (event) => {\n            if (event.cancelable) {\n                event.preventDefault();\n            }\n            const touch = event.targetTouches[0];\n            this._strokeMoveUpdate(touch);\n        };\n        this._handleTouchEnd = (event) => {\n            const wasCanvasTouched = event.target === this.canvas;\n            if (wasCanvasTouched) {\n                if (event.cancelable) {\n                    event.preventDefault();\n                }\n                const touch = event.changedTouches[0];\n                this._strokeEnd(touch);\n            }\n        };\n        this._handlePointerStart = (event) => {\n            event.preventDefault();\n            this._strokeBegin(event);\n        };\n        this._handlePointerMove = (event) => {\n            this._strokeMoveUpdate(event);\n        };\n        this._handlePointerEnd = (event) => {\n            if (this._drawingStroke) {\n                event.preventDefault();\n                this._strokeEnd(event);\n            }\n        };\n        this.velocityFilterWeight = options.velocityFilterWeight || 0.7;\n        this.minWidth = options.minWidth || 0.5;\n        this.maxWidth = options.maxWidth || 2.5;\n        this.throttle = ('throttle' in options ? options.throttle : 16);\n        this.minDistance = ('minDistance' in options ? options.minDistance : 5);\n        this.dotSize = options.dotSize || 0;\n        this.penColor = options.penColor || 'black';\n        this.backgroundColor = options.backgroundColor || 'rgba(0,0,0,0)';\n        this.compositeOperation = options.compositeOperation || 'source-over';\n        this.canvasContextOptions = ('canvasContextOptions' in options ? options.canvasContextOptions : {});\n        this._strokeMoveUpdate = this.throttle\n            ? throttle(SignaturePad.prototype._strokeUpdate, this.throttle)\n            : SignaturePad.prototype._strokeUpdate;\n        this._ctx = canvas.getContext('2d', this.canvasContextOptions);\n        this.clear();\n        this.on();\n    }\n    clear() {\n        const { _ctx: ctx, canvas } = this;\n        ctx.fillStyle = this.backgroundColor;\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        this._data = [];\n        this._reset(this._getPointGroupOptions());\n        this._isEmpty = true;\n    }\n    fromDataURL(dataUrl, options = {}) {\n        return new Promise((resolve, reject) => {\n            const image = new Image();\n            const ratio = options.ratio || window.devicePixelRatio || 1;\n            const width = options.width || this.canvas.width / ratio;\n            const height = options.height || this.canvas.height / ratio;\n            const xOffset = options.xOffset || 0;\n            const yOffset = options.yOffset || 0;\n            this._reset(this._getPointGroupOptions());\n            image.onload = () => {\n                this._ctx.drawImage(image, xOffset, yOffset, width, height);\n                resolve();\n            };\n            image.onerror = (error) => {\n                reject(error);\n            };\n            image.crossOrigin = 'anonymous';\n            image.src = dataUrl;\n            this._isEmpty = false;\n        });\n    }\n    toDataURL(type = 'image/png', encoderOptions) {\n        switch (type) {\n            case 'image/svg+xml':\n                if (typeof encoderOptions !== 'object') {\n                    encoderOptions = undefined;\n                }\n                return `data:image/svg+xml;base64,${btoa(this.toSVG(encoderOptions))}`;\n            default:\n                if (typeof encoderOptions !== 'number') {\n                    encoderOptions = undefined;\n                }\n                return this.canvas.toDataURL(type, encoderOptions);\n        }\n    }\n    on() {\n        this.canvas.style.touchAction = 'none';\n        this.canvas.style.msTouchAction = 'none';\n        this.canvas.style.userSelect = 'none';\n        const isIOS = /Macintosh/.test(navigator.userAgent) && 'ontouchstart' in document;\n        if (window.PointerEvent && !isIOS) {\n            this._handlePointerEvents();\n        }\n        else {\n            this._handleMouseEvents();\n            if ('ontouchstart' in window) {\n                this._handleTouchEvents();\n            }\n        }\n    }\n    off() {\n        this.canvas.style.touchAction = 'auto';\n        this.canvas.style.msTouchAction = 'auto';\n        this.canvas.style.userSelect = 'auto';\n        this.canvas.removeEventListener('pointerdown', this._handlePointerStart);\n        this.canvas.removeEventListener('pointermove', this._handlePointerMove);\n        this.canvas.ownerDocument.removeEventListener('pointerup', this._handlePointerEnd);\n        this.canvas.removeEventListener('mousedown', this._handleMouseDown);\n        this.canvas.removeEventListener('mousemove', this._handleMouseMove);\n        this.canvas.ownerDocument.removeEventListener('mouseup', this._handleMouseUp);\n        this.canvas.removeEventListener('touchstart', this._handleTouchStart);\n        this.canvas.removeEventListener('touchmove', this._handleTouchMove);\n        this.canvas.removeEventListener('touchend', this._handleTouchEnd);\n    }\n    isEmpty() {\n        return this._isEmpty;\n    }\n    fromData(pointGroups, { clear = true } = {}) {\n        if (clear) {\n            this.clear();\n        }\n        this._fromData(pointGroups, this._drawCurve.bind(this), this._drawDot.bind(this));\n        this._data = this._data.concat(pointGroups);\n    }\n    toData() {\n        return this._data;\n    }\n    _getPointGroupOptions(group) {\n        return {\n            penColor: group && 'penColor' in group ? group.penColor : this.penColor,\n            dotSize: group && 'dotSize' in group ? group.dotSize : this.dotSize,\n            minWidth: group && 'minWidth' in group ? group.minWidth : this.minWidth,\n            maxWidth: group && 'maxWidth' in group ? group.maxWidth : this.maxWidth,\n            velocityFilterWeight: group && 'velocityFilterWeight' in group\n                ? group.velocityFilterWeight\n                : this.velocityFilterWeight,\n            compositeOperation: group && 'compositeOperation' in group\n                ? group.compositeOperation\n                : this.compositeOperation,\n        };\n    }\n    _strokeBegin(event) {\n        const cancelled = !this.dispatchEvent(new CustomEvent('beginStroke', { detail: event, cancelable: true }));\n        if (cancelled) {\n            return;\n        }\n        this._drawingStroke = true;\n        const pointGroupOptions = this._getPointGroupOptions();\n        const newPointGroup = Object.assign(Object.assign({}, pointGroupOptions), { points: [] });\n        this._data.push(newPointGroup);\n        this._reset(pointGroupOptions);\n        this._strokeUpdate(event);\n    }\n    _strokeUpdate(event) {\n        if (!this._drawingStroke) {\n            return;\n        }\n        if (this._data.length === 0) {\n            this._strokeBegin(event);\n            return;\n        }\n        this.dispatchEvent(new CustomEvent('beforeUpdateStroke', { detail: event }));\n        const x = event.clientX;\n        const y = event.clientY;\n        const pressure = event.pressure !== undefined\n            ? event.pressure\n            : event.force !== undefined\n                ? event.force\n                : 0;\n        const point = this._createPoint(x, y, pressure);\n        const lastPointGroup = this._data[this._data.length - 1];\n        const lastPoints = lastPointGroup.points;\n        const lastPoint = lastPoints.length > 0 && lastPoints[lastPoints.length - 1];\n        const isLastPointTooClose = lastPoint\n            ? point.distanceTo(lastPoint) <= this.minDistance\n            : false;\n        const pointGroupOptions = this._getPointGroupOptions(lastPointGroup);\n        if (!lastPoint || !(lastPoint && isLastPointTooClose)) {\n            const curve = this._addPoint(point, pointGroupOptions);\n            if (!lastPoint) {\n                this._drawDot(point, pointGroupOptions);\n            }\n            else if (curve) {\n                this._drawCurve(curve, pointGroupOptions);\n            }\n            lastPoints.push({\n                time: point.time,\n                x: point.x,\n                y: point.y,\n                pressure: point.pressure,\n            });\n        }\n        this.dispatchEvent(new CustomEvent('afterUpdateStroke', { detail: event }));\n    }\n    _strokeEnd(event) {\n        if (!this._drawingStroke) {\n            return;\n        }\n        this._strokeUpdate(event);\n        this._drawingStroke = false;\n        this.dispatchEvent(new CustomEvent('endStroke', { detail: event }));\n    }\n    _handlePointerEvents() {\n        this._drawingStroke = false;\n        this.canvas.addEventListener('pointerdown', this._handlePointerStart);\n        this.canvas.addEventListener('pointermove', this._handlePointerMove);\n        this.canvas.ownerDocument.addEventListener('pointerup', this._handlePointerEnd);\n    }\n    _handleMouseEvents() {\n        this._drawingStroke = false;\n        this.canvas.addEventListener('mousedown', this._handleMouseDown);\n        this.canvas.addEventListener('mousemove', this._handleMouseMove);\n        this.canvas.ownerDocument.addEventListener('mouseup', this._handleMouseUp);\n    }\n    _handleTouchEvents() {\n        this.canvas.addEventListener('touchstart', this._handleTouchStart);\n        this.canvas.addEventListener('touchmove', this._handleTouchMove);\n        this.canvas.addEventListener('touchend', this._handleTouchEnd);\n    }\n    _reset(options) {\n        this._lastPoints = [];\n        this._lastVelocity = 0;\n        this._lastWidth = (options.minWidth + options.maxWidth) / 2;\n        this._ctx.fillStyle = options.penColor;\n        this._ctx.globalCompositeOperation = options.compositeOperation;\n    }\n    _createPoint(x, y, pressure) {\n        const rect = this.canvas.getBoundingClientRect();\n        return new Point(x - rect.left, y - rect.top, pressure, new Date().getTime());\n    }\n    _addPoint(point, options) {\n        const { _lastPoints } = this;\n        _lastPoints.push(point);\n        if (_lastPoints.length > 2) {\n            if (_lastPoints.length === 3) {\n                _lastPoints.unshift(_lastPoints[0]);\n            }\n            const widths = this._calculateCurveWidths(_lastPoints[1], _lastPoints[2], options);\n            const curve = Bezier.fromPoints(_lastPoints, widths);\n            _lastPoints.shift();\n            return curve;\n        }\n        return null;\n    }\n    _calculateCurveWidths(startPoint, endPoint, options) {\n        const velocity = options.velocityFilterWeight * endPoint.velocityFrom(startPoint) +\n            (1 - options.velocityFilterWeight) * this._lastVelocity;\n        const newWidth = this._strokeWidth(velocity, options);\n        const widths = {\n            end: newWidth,\n            start: this._lastWidth,\n        };\n        this._lastVelocity = velocity;\n        this._lastWidth = newWidth;\n        return widths;\n    }\n    _strokeWidth(velocity, options) {\n        return Math.max(options.maxWidth / (velocity + 1), options.minWidth);\n    }\n    _drawCurveSegment(x, y, width) {\n        const ctx = this._ctx;\n        ctx.moveTo(x, y);\n        ctx.arc(x, y, width, 0, 2 * Math.PI, false);\n        this._isEmpty = false;\n    }\n    _drawCurve(curve, options) {\n        const ctx = this._ctx;\n        const widthDelta = curve.endWidth - curve.startWidth;\n        const drawSteps = Math.ceil(curve.length()) * 2;\n        ctx.beginPath();\n        ctx.fillStyle = options.penColor;\n        for (let i = 0; i < drawSteps; i += 1) {\n            const t = i / drawSteps;\n            const tt = t * t;\n            const ttt = tt * t;\n            const u = 1 - t;\n            const uu = u * u;\n            const uuu = uu * u;\n            let x = uuu * curve.startPoint.x;\n            x += 3 * uu * t * curve.control1.x;\n            x += 3 * u * tt * curve.control2.x;\n            x += ttt * curve.endPoint.x;\n            let y = uuu * curve.startPoint.y;\n            y += 3 * uu * t * curve.control1.y;\n            y += 3 * u * tt * curve.control2.y;\n            y += ttt * curve.endPoint.y;\n            const width = Math.min(curve.startWidth + ttt * widthDelta, options.maxWidth);\n            this._drawCurveSegment(x, y, width);\n        }\n        ctx.closePath();\n        ctx.fill();\n    }\n    _drawDot(point, options) {\n        const ctx = this._ctx;\n        const width = options.dotSize > 0\n            ? options.dotSize\n            : (options.minWidth + options.maxWidth) / 2;\n        ctx.beginPath();\n        this._drawCurveSegment(point.x, point.y, width);\n        ctx.closePath();\n        ctx.fillStyle = options.penColor;\n        ctx.fill();\n    }\n    _fromData(pointGroups, drawCurve, drawDot) {\n        for (const group of pointGroups) {\n            const { points } = group;\n            const pointGroupOptions = this._getPointGroupOptions(group);\n            if (points.length > 1) {\n                for (let j = 0; j < points.length; j += 1) {\n                    const basicPoint = points[j];\n                    const point = new Point(basicPoint.x, basicPoint.y, basicPoint.pressure, basicPoint.time);\n                    if (j === 0) {\n                        this._reset(pointGroupOptions);\n                    }\n                    const curve = this._addPoint(point, pointGroupOptions);\n                    if (curve) {\n                        drawCurve(curve, pointGroupOptions);\n                    }\n                }\n            }\n            else {\n                this._reset(pointGroupOptions);\n                drawDot(points[0], pointGroupOptions);\n            }\n        }\n    }\n    toSVG({ includeBackgroundColor = false } = {}) {\n        const pointGroups = this._data;\n        const ratio = Math.max(window.devicePixelRatio || 1, 1);\n        const minX = 0;\n        const minY = 0;\n        const maxX = this.canvas.width / ratio;\n        const maxY = this.canvas.height / ratio;\n        const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n        svg.setAttribute('xmlns:xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttribute('viewBox', `${minX} ${minY} ${maxX} ${maxY}`);\n        svg.setAttribute('width', maxX.toString());\n        svg.setAttribute('height', maxY.toString());\n        if (includeBackgroundColor && this.backgroundColor) {\n            const rect = document.createElement('rect');\n            rect.setAttribute('width', '100%');\n            rect.setAttribute('height', '100%');\n            rect.setAttribute('fill', this.backgroundColor);\n            svg.appendChild(rect);\n        }\n        this._fromData(pointGroups, (curve, { penColor }) => {\n            const path = document.createElement('path');\n            if (!isNaN(curve.control1.x) &&\n                !isNaN(curve.control1.y) &&\n                !isNaN(curve.control2.x) &&\n                !isNaN(curve.control2.y)) {\n                const attr = `M ${curve.startPoint.x.toFixed(3)},${curve.startPoint.y.toFixed(3)} ` +\n                    `C ${curve.control1.x.toFixed(3)},${curve.control1.y.toFixed(3)} ` +\n                    `${curve.control2.x.toFixed(3)},${curve.control2.y.toFixed(3)} ` +\n                    `${curve.endPoint.x.toFixed(3)},${curve.endPoint.y.toFixed(3)}`;\n                path.setAttribute('d', attr);\n                path.setAttribute('stroke-width', (curve.endWidth * 2.25).toFixed(3));\n                path.setAttribute('stroke', penColor);\n                path.setAttribute('fill', 'none');\n                path.setAttribute('stroke-linecap', 'round');\n                svg.appendChild(path);\n            }\n        }, (point, { penColor, dotSize, minWidth, maxWidth }) => {\n            const circle = document.createElement('circle');\n            const size = dotSize > 0 ? dotSize : (minWidth + maxWidth) / 2;\n            circle.setAttribute('r', size.toString());\n            circle.setAttribute('cx', point.x.toString());\n            circle.setAttribute('cy', point.y.toString());\n            circle.setAttribute('fill', penColor);\n            svg.appendChild(circle);\n        });\n        return svg.outerHTML;\n    }\n}\n\nexport { SignaturePad as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}